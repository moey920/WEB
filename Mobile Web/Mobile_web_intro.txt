1. 시작 페이지 제작하기

    (1) 시작 페이지 구조 파악하기
        1) 모바일 웹 페이지 전체구조
            * 시작 페이지 : 화면에 fit한 전체 이미지가 롤링되며 넘어감. 클릭하면 메인 페이지로 이동
            * 메인 페이지 : 왼쪽 삼단 메뉴 버튼 - 왼쪽에서 오른쪽으로 나타나는 사이드 메뉴
                            하단 - 큰 정보 출력
            * 메인의 상세 페이지 : 메인의 리스트에 있는 정보를 클릭하면 넘어가는 페이지. 이미지가 스크롤링 되는 페이지
            * Q&A 페이지 : 페이지와 관련하여 궁금한 점을 기입하는 Form 양식, 제대로 기입했는지 확인하는 validation 기능 구현

    (2) 모바일 웹 제작시 사용되는 <meta> 속성
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0”>
        viewport : 기기 화면(핸드폰, 태블릿 등)
        width=device-width : viewport의 width를 기기의 width에 맞추겠다.

    (3) 2차원, 3차원을 결정짓는 속성(CSS position 속성값 파악하기)** 중요!
        1) 3차원 : 공간의 세계(웹에서는 레이어가 존재하는 상태라고 생각하면 된다.)
        2) Web에서 2차원과 3차원의 차이 :
            2-1) position은 Web를 2차원으로 할지, 3차원으로 할지 결정하는 속성
                * 2차원 : static
                * 3차원 : absolute, fixed
                * 2차원과 3차원의 교집합 : relative
        3) 2차원과 3차원을 구분짓는 3가지 요소
            3-1) 부모 자식 간에 발생하는 마진 병합 현상의 유무 (2차원 O / 3차원 X)
            3-2) top, left, right, bottom 속성의 사용 가능 여부 (2차원 X / 3차원 O)
            3-3) 자식의 높이 값이 부모의 높이 값에 영향을 주는지 여부(=부모가 높이 값을 가지고 있지 않을 때 자식의 영향을 받는지)
                (2차원 O / 3차원 X)
            3-4) position:relative는 세가지 요소가 모두 가능하다
            3-5) 자세한 내용은 같은 루트의 position.html을 숙지하기

    (4) z축에 영향을 미치는 속성(z-index 속성)
        1) Z축 사용은 레이어층을 만드는 것을 의미. 3차원을 의미한다.
        2) position이 3차원일 경우에만 사용 가능하다.(relative, absolute, fixed)
        3) 예시
            <style>
                .z-index-1 {
                    position:absolute;
                    width: 100%;
                    height: 150px;
                    background-color: yellow;
                    
                    z-index : 100; /* 숫자생략, 원하는 숫자 기입 */
                    /* z-index는 우선순위를 변경하고자 할 때 사용한다. */
                }

                .z-index-2 {
                    position:absolute;
                    left : 30px;
                    width: 100%;
                    height: 250px;
                    background-color: blue;
                    
                    z-index : 50;
                    /* Default는 나중에 작성된 3차원 오브젝트의 z-index의 우선순위가 더 높다.(레이어가 앞으로 온다.) */
                }
            </style>
  

    (5) 알아두면 좋을 팁(1) - background 속성 

        1) background-size : 배경 이미지의 크기를 정하는 속성
            1-1) contain : 배경을 사용하는 요소를 벗어나지 않는 최대 크기로 이미지를 확대/축소, 가로세로 비율은 유지된다.
                            공간 안에서 가로세로 비율에 맞게 최대한 맞춰진다.
            1-2) cover : 배경을 사용하는 요소에 꽉 채워서 맞춰진다. 가로세로 비율은 유지된다.
                        다만, 공간 맞게 확대된 뒤 공간을 넘어가는 이미지 부분은 보여지지 않는다.
        
        2) background-attachment : 배경 이미지의 스크롤 여부를 결정하는 요소(실습 코드 참고) == 배경 이미지를 고정하는 방식!
            2-1) scroll : 내용을 스크롤하면, 배경이미지도 스크롤 된다.
            2-2) fixed : 배경 이미지는 고정되고, 안의 내용물은 스크롤된다.
            2-3) 코드
                  <style>
                    /* .backgroundSize {
                        width: 400px;
                        height: 400px;
                        background: yellow url("img/intro/1.png") center no-repeat;
                        background-size : contain;
                        background-size : cover;
                        보통 웹사이트에서 배경이미지가 들어가는 부분은 대부분 cover를 사용한다.
                    } */
                    
                    body {
                    background: url("img/main/player1.png") no-repeat;
                    /* background-attachment :  fixed; */ /* 배경이미지 함께 스크롤됌 */
                    background-attachment : scroll; /* 배경이미지가 좌표에 고정됌 */
                    }
                </style>
            
        3) y축 중앙 정렬 방법
            3-1) 공식 이용(3차원 position에서만 사용 가능)
                ... {
                    top : 50%;
                    transform : translateY(-50%);
                }

    (6) 알아두면 좋을 팁(2) - Full Clip 플러그인(배경 이미지 슬라이드-용량이 작아 웹사이트 로딩 속도 부담을 줄여준다)

        1) https://github.com/bdimitrovski/full_clip,
            https://www.jqueryscript.net/demo/Simplest-Background-Image-Slideshow-Plugin-jQuery-Full-Clip/ 를 참고

        2) 반드시 jQuery 파일이 연동되어 있어야 사용할 수 있다.

        3) 사용 방법 (jQuery 파일 연동, full_clip.js 파일 연동)
            <script>
                $('.fullBackground').fullClip({ /* $("")안에 배경 슬라이드를 사용할 영역 지정, .fullclip 메서드 사용, 
                프로퍼티로 images:[] 경로, transitionTime(전환시간), wait(각 이미지에 머무는 시간) 넘겨준다.*/
                    images: [
                        'images/house.jpg',
                        'images/road.jpg',
                        'images/winter.jpg'
                    ],
                    transitionTime: 1000,
                    wait: 7000
                });
            </script> 
            
        4) 반드시 full_clip css속성을 기입해준다.
            .fullBackground {
                background-position: center center;
                background-attachment: fixed;
                background-size: cover;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
            }
        
------------------------------------------------------------------------------------------------------------------------------------

2. 메인 페이지 제작하기

    (1) 메인 페이지 살펴보기
        1) 상단영역(스크롤시 고정 - position:fixed)
        2) 메인페이지 설명 이미지
        3) 메인 정보(리스트)
        4) 상단 메뉴 버튼(클릭시 네비게이션 표출)

    (2) 상단 영역 만들기
        1) 헤더에 대한 CSS 작성(메뉴 이미지 삽입 및 레이어 설정, 로고 위치 설정)
        2) 코드
            #header {
                position: fixed;
                width : 100%;
                height : 50px;
                background-color: white;
                border-bottom : 1px solid #d4d4d4;
                top:0;
                left:0;
                z-index : 9999; 
            }
             #header .left {
                position:absolute;
                width : 25px;
                height : 25px;
                background : url("../img/main/nav.png");
                background-size : 100%;
                top : 12px;
                left : 16px;
                cursor : pointer;
            }
            #header .logo {
                padding-top : 12px;
                text-align : center;
            }
            #header .logo img {
                height : 25px;
            }
            
    (3) 왼쪽 네비게이션 제작
        1) 페이지 소스 참고
         
    (4) box-shadow, border-radius 속성
        1) box-shadow : 공간에 그림자 효과 CSS 속성
            1-1) .box_shadow {
                    width : 300px;
                    height : 300px;
                    box-shadow : 10px 10px 10px 10px red; /* x축, y축, 그림자 선명도(클수록 흐려지게), 확산거리, 그림자 색상
                }
                링크 참고 https://www.cssmatic.com/box-shadow
            
        2) border-radius : 테두리의 각도 조절
            2-1) .box_shadow {
                    width: 300px;
                    height: 300px;
                    border: solid 10px red;
                    border-radius: 30px;
                }

    (5) 본문 영역 만들기 
        1) 페이지 소스 참고

------------------------------------------------------------------------------------------------------------------------------------

3. 상세 페이지 제작하기

    (1) 상세 페이지 구성요소
        1) 상단 영역(네비게이션) - 메인 페이지의 선수 버튼을 클릭했을 때 나오는 메뉴이므로, 뒤로가기 버튼 생성

        2) 상단 아래 이미지 슬라이드 효과

        3) 메뉴를 클릭해서 넘어간 정보 레이아웃(내용물)

        4) 하단 패럴랙스 효과

    (2) 웹폰트 적용하기
        1) 웹 상에 존재하는 폰트를 다운받아 적용하는 것
            구글 웹 폰트 : https://fonts.google.com/
        
        2) import 
            /* CSS 파일에 적용 */
            @import url(//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css); //파일이 있는 링크주소 작성
            @import url(//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-jp.css);
            … {
                text-decoration: none;
                font-family: 'Spoqa Han Sans';
            }

    (3) 상세 페이지 상단 영역 만들기
        1) 왼쪽 상단 Back 버튼
            <header id="header">
                <a href="main.html">
                    <div class="back"></div>
                </a>
                <h1 class="logo">
                    <a href="main.html">
                        <img src="img/main/logo.png" alt="">
                    </a>
                </h1>
            </header>
            /*CSS파일*/
            #header .back {
                position : absolute;
                width : 25px;
                height : 25px;
                background : url(../img/main_details/back_arrow.png);
                background-size : 100%;
                top:12px;
                left:16px;
                cursor : pointer;
            }

    (4) 이미지 슬라이드 만들어보기
        1) Owl Carousel2 외부 라이브러리 사용
            1-1) PC/모바일 환경 이미지 슬라이드 지원   
                https://owlcarousel2.github.io/OwlCarousel2/
            
            1-2) 사용 코드
                <head>
                    <link rel="stylesheet" href="css/owl.carousel.css">
                    <link rel="stylesheet" href="css/owl.theme.default.css”>
                </head>
                <body>
                    <script src=“js/owl.carousel.js"></script>
                </body>

                <div id="main_slider">
                    <div class="owl-carousel">
                        <div class="item">
                            <img src="img/main_details/slider1.jpg" alt="">
                        </div>
                        <div class="item">
                            <img src="img/main_details/slider2.jpg" alt="">
                        </div>
                        <div class="item">
                            <img src="img/main_details/slider3.jpg" alt="">
                        </div>
                    </div>
                </div>

                /* script 안에 작성 */
                $('.owl-carousel').owlCarousel({
                    items: , /*이미지 개수*/
                    loop: , /*반복 여부(참, 거짓)*/
                    autoplay: , /*자동 재생*/
                    dots: , /*이미지 아래 순서 동그라미 여부*/
                    autoplayTimeout: , /*각 이미지에 머무는 시간*/
                    autoplayHoverPause: /*마우스를 올렸을 때 슬라이드 일시정지(모바일에선 작동안함)*/
                })
                
    (5) 상세 페이지 본문 영역 만들기

    (6) CSS 효과만으로 패럴랙스 효과 구현하기

------------------------------------------------------------------------------------------------------------------------------------

4. Q&A 페이지 제작하기

    (1) Q&A 페이지 살펴보기
        1) 상단 영역(메인 페이지와 동일)

        2) Q&A 이미지 (메인 페이지와 이미지만 상이)

        3) 본문 HTML 영역(제목 이메일 내용 문의하기 버튼 등)

    (2) <form> 태그 알아보기
        1) 사용자가 특정 정보를 기입하고, 이를 서버에 전달할 수 있도록 하는 '전체' 영역

        2) action, method 등의 속성을 기입해야 서버와 연동할 수 있다.

    (3) <input> 알아보기
        1) input은 <label> 태그와 함께 사용된다. label의 for속성과, input의 id/name 속성은 모두 같아야만 한다.
            <label for="topic">제목</label>
            <input type="text" id="topic" name="topic"></input>

        2) input type에는 text(글자), email(이메일), tel(전화번호), password(비밀번호)
            checkbox(다중선택), radio(단일선택) 가 있다.

        3) label 태그로 input을 감싸도 된다.
            <label>
                <input>
            </label>

        4) checkbox는 input의 name 속성이 달라야한다.(여러개 선택하기 때문에)
            radio는 input의 name 속성이 같아야한다.(동일해야지만 중복체크를 막을 수 있다.)
                <label for="male">
                    <input type="radio" id="male" name="gender">남자
                </label>
                <label for="female">
                    <input type="radio" id="female" name="gender">여자
                </label>

    (4) <textarea> 알아보기
        1) 장문의 글자를 입력할 때 사용하는 태그

        2) input과 동일하게 label과 함께 사용하며, label for 속성과 textarea id, name 속성을 동일한 값을 주어야 한다.

        3) input과는 다르게 닫는 태크가 필요하다.

    (5) 회원가입 양식 만들어보기
        1) 차후 구현예정(네이버 회원가입 form 만들기)

    (6) 문의하기 양식 만들기
        1) CSS 구현
            /* Q&A 페이지 */

            #question_form .form-group {
                padding-bottom : 32px;
            }
            #question_form label {
                display : block;
                font-size : 15px;
                font-weight : bold;
                margin-bottom : 8px;
            }
            #question_form input,
            #question_form textarea {
                display : block;
                width : 100%;
                height : 40px;
                background-color : #fff;
                border : 1px solid #ccc;
                padding : 8px 12px;
                color : #555;
                font-size : 14px;
            }
            #question_form textarea {
                height : 100px;
            }
            #question_form button {
                width :100%;
                background-color : #564997;
                border : 1px solid #ccc;
                padding: 16px 0;
                font-weight : bold;
                color : #ffffff;
                font-size : 16px;
            }

        2) HTML 구현 (body-main-section-form)
            /* Q&A 페이지 */
                <section id="question">

                    <form id="question_form">

                    <!-- 문의하기 양식 입력하기 -->
                        <div class="form-group">
                            <label for="topic">제목
                                <input type="text" id="topic" name="topic" required minlength="5">
                            </label>
                        </div>
                        
                        <div class="form-group">
                            <label for="email">이메일 주소
                                <input type="email" id="email" name="email" required>
                            </label>
                        </div>
                        
                        <div class="form-group">
                            <label for="message">내용
                                <input type="textarea" id="message" name="message" required>
                            </label>
                        </div>
                        
                        <div class="form-group">
                            <button type="submit">문의하기</button>
                        </div>
                        
                    </form>

                </section>
                
    (7) validation 기능 만들기
        1) 입력 양식에 부적합할 때 검증하는 양식

        2) 반드시 필요한 정보(required)를 모두 기입했는지 검증, 이메일 주소 체크(@기준)

        3) jQuery로 구현가능하지만, 외부 플러그인을 사용하면 더 간편하다(jQuery Validation Plugin)
            3-1) 링크
                https://jqueryvalidation.org/

            3-2) 사용예시
                <script src="js/jquery.validate.js"></script>

                <script>
                    $("#question_form").validate();
                    $.extend($.validator.message, {
                        required: "필수 항목입니다.",
                        email : "유효하지 않은 이메일 주소입니다.",
                        minlength : $.validator.format("{0}자 이상 입력하세요.")
                    });
                </script>
                                
            3-3) 미션 : 이전에 만든 네이버 회원가입 양식에 validation을 적용해보기(차후 구현)
                        단 전화번호는 정규표현식으로 검증!
